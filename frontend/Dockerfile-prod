# Stage 1: Build the Angular application
FROM node:22-alpine AS build
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .

# La sortie se fait dans le dossier ./dist
RUN npm run build -- --configuration production
# Assurez-vous que le nom du projet dans "output-path" correspond à votre angular.json
# RUN npm run build -- --configuration production --output-path=./dist

#-----------------------
# Étape 2: Service de l'application avec Nginx
FROM nginx:1.25-alpine

# Supprimer le contenu HTML par défaut de Nginx
#RUN rm -rf /var/www/html/tarif/*

# Copier les fichiers statiques compilés
COPY --from=build app/dist/frontend/  /var/www/html/tarif
# COPY --from=build app/dist/browser/ /usr/share/nginx/html/tarif

# On applique les permissions à la nouvelle racine
RUN chown -R nginx:nginx /var/www/html/tarif \
    && chmod -R 755 /var/www/html/tarif

# Supprimer la configuration par défaut de Nginx
RUN rm /etc/nginx/conf.d/default.conf

# Copier notre propre configuration Nginx
COPY nginx-docker.conf /etc/nginx/conf.d/default.conf

EXPOSE 80
# EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]
